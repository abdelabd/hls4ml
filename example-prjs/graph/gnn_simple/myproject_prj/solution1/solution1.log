==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xcku115-flvb2104-2-i'
INFO: [XFORM 203-101] Allowed max sub elements number after partition is 4096.
INFO: [XFORM 203-101] Allowed max sub elements number after partition is 4096.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'myproject.cpp' ... 
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region: ./nnet_dense.h:130:9
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region: ./nnet_dense.h:140:2
WARNING: [HLS 214-104] Only for-loops and functions support the dataflow: ./nnet_dense.h:137:9
WARNING: [HLS 214-104] Only for-loops and functions support the dataflow: ./nnet_graph.h:64:9
WARNING: [HLS 214-104] Only for-loops and functions support the dataflow: ./nnet_graph.h:121:9
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:74:3
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:74:51
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:77:68
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:77:85
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:84:69
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:84:86
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:92:3
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:92:51
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:95:68
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:95:85
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:102:69
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:102:86
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:176:3
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:176:51
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:179:68
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:179:85
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:186:69
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:186:86
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:192:3
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:192:49
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:195:68
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:195:85
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:201:68
WARNING: [HLS 214-113] Either use an argument of the function or declare the variable inside the dataflow loop body: myproject.cpp:201:85
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region: myproject.cpp:70:2
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region: myproject.cpp:71:3
WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region: myproject.cpp:116:2
WARNING: [HLS 200-471] Dataflow form checks found 32 issue(s) in file myproject.cpp
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:31 ; elapsed = 00:00:33 . Memory (MB): peak = 1047.203 ; gain = 527.164 ; free physical = 42417 ; free virtual = 121839
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:31 ; elapsed = 00:00:33 . Memory (MB): peak = 1047.203 ; gain = 527.164 ; free physical = 42417 ; free virtual = 121839
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-489] Unrolling loop 'InitAccum' (./nnet_dense_large.h:58) in function 'void nnet::dense_large_rf_leq_nin<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config8>(FORWARD_REFERENCE*, FORWARD_REFERENCE*, FORWARD_REFERENCE::weight_t*, FORWARD_REFERENCE::bias_t*)' completely with a factor of 1.
INFO: [HLS 200-489] Unrolling loop 'Result' (./nnet_dense_large.h:97) in function 'void nnet::dense_large_rf_leq_nin<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config8>(FORWARD_REFERENCE*, FORWARD_REFERENCE*, FORWARD_REFERENCE::weight_t*, FORWARD_REFERENCE::bias_t*)' completely with a factor of 1.
INFO: [XFORM 203-603] Inlining function 'nnet::dense_large_rf_leq_nin<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config1>' into 'nnet::dense_large<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config1>' (./nnet_dense_large.h:283).
INFO: [XFORM 203-603] Inlining function 'nnet::dense_large_rf_leq_nin<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config2>' into 'nnet::dense_large<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config2>' (./nnet_dense_large.h:283).
INFO: [XFORM 203-603] Inlining function 'nnet::dense_large_rf_leq_nin<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config3>' into 'nnet::dense_large<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config3>' (./nnet_dense_large.h:283).
INFO: [XFORM 203-603] Inlining function 'nnet::dense_large_rf_leq_nin<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config4>' into 'nnet::dense_large<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config4>' (./nnet_dense_large.h:283).
INFO: [XFORM 203-603] Inlining function 'nnet::dense_large_rf_leq_nin<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config5>' into 'nnet::dense_large<ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, ap_fixed<16, 6, (ap_q_mode)5, (ap_o_mode)3, 0>, dense_config5>' (./nnet_dense_large.h:283).
